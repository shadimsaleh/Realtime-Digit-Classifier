/******************************************************************************

    FILENAME:       HogSvm.h

    DESCRIPTION:    Implementation of SVM using an images histogram of oriented 
                    gradients (HOG) for SVM features

    AUTHOR:         David Sharpe
        
    DEPENDENCIES:   OpenCV 2.4.x

******************************************************************************/
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Include Files
///////////////////////////////////////////////////////////////////////////////
#include "opencv2/opencv.hpp"
#include "Svm.h"


///////////////////////////////////////////////////////////////////////////////
// Class Definition
///////////////////////////////////////////////////////////////////////////////
class HogSvm : public Svm
{
    ///////////////////////////////////////////////////////////////////////////
    // Construction/Destruction
    ///////////////////////////////////////////////////////////////////////////
public:
    HogSvm();
    virtual ~HogSvm();

    ///////////////////////////////////////////////////////////////////////////
    // Public Functions
    ///////////////////////////////////////////////////////////////////////////
public:
    float Predict(const cv::Mat &image) const;
    bool  Train(const std::vector<cv::Mat> &images, const cv::Mat &labels) const;
    float Test(const std::vector<cv::Mat> &images, const cv::Mat &labels) const;

    ///////////////////////////////////////////////////////////////////////////
    // Private Functions
    ///////////////////////////////////////////////////////////////////////////
private:
    bool ExtractFeatures(const std::vector<cv::Mat> &images, cv::Mat &features) const;
    bool ExtractFeatures(const cv::Mat &image, cv::Mat &features) const;

    ///////////////////////////////////////////////////////////////////////////
    // Private Variables
    ///////////////////////////////////////////////////////////////////////////
private:
    cv::HOGDescriptor m_hog;

};